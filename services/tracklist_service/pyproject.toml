[project]
name = "tracklist_service"
version = "0.1.0"
description = "1001tracklists.com API integration and search service"
requires-python = ">=3.12"
dependencies = [ "aio-pika>=9.0.0", "aiohttp>=3.9.0", "aioredis>=2.0.1", "apscheduler>=3.10.0", "asyncpg>=0.29.0", "bcrypt>=4.1.0", "beautifulsoup4>=4.12.0", "fastapi>=0.104.0", "lxml>=4.9.0", "mutagen>=1.47.0", "passlib>=1.7.4", "pika>=1.3.0", "pydantic>=2.0.0", "pyjwt>=2.8.0", "python-dotenv>=1.0.0", "python-multipart>=0.0.6", "redis[hiredis]>=5.0.0", "requests>=2.31.0", "sqlalchemy>=2.0.0", "structlog>=24.0.0", "tinytag>=1.10.0", "uvicorn>=0.24.0",]

[build-system]
requires = [ "hatchling",]
build-backend = "hatchling.build"

[project.optional-dependencies]
dev = [ "httpx>=0.25.0", "mypy==1.17.1", "pytest>=8.0.0", "pytest-asyncio>=0.23.0", "pytest-cov>=4.0.0", "pytest-mock>=3.12.0", "ruff>=0.1.0", "types-lxml>=2025.8.25", "types-psutil>=7.0.0.20250822", "types-python-dateutil>=2.9.0.20250822", "types-requests>=2.32.4.20250809",]

[tool.ruff]
line-length = 120
target-version = "py313"
fix = true

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
no_implicit_optional = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
follow_imports = "normal"
namespace_packages = true
explicit_package_bases = true
# SQLAlchemy 2.0 compatibility - disable problematic error codes
disable_error_code = ["attr-defined", "arg-type", "assignment", "misc", "return-value", "type-var", "operator", "unused-ignore", "import-untyped", "no-any-return"]
[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "src.models.cue_file"
ignore_errors = true

[[tool.mypy.overrides]]
module = "src.services.version_service"
ignore_errors = true

[[tool.mypy.overrides]]
module = "src.services.draft_service"
ignore_errors = true

[[tool.mypy.overrides]]
module = "src.services.cue_generation_service"
ignore_errors = true

[[tool.mypy.overrides]]
module = "src.services.catalog_search_service"
ignore_errors = true

[[tool.mypy.overrides]]
module = "src.repository.cue_file_repository"
ignore_errors = true

[[tool.mypy.overrides]]
module = "src.cache.redis_cache"
ignore_errors = true

[[tool.mypy.overrides]]
module = "src.services.conflict_resolution_service"
ignore_errors = true

[[tool.mypy.overrides]]
module = "src.messaging.file_event_consumer"
ignore_errors = true

[tool.black]
line-length = 120
target-version = [ "py313",]
include = "\\.pyi?$"
extend-exclude = "\n(\n  /(\n      \\.eggs\n    | \\.git\n    | \\.hg\n    | \\.mypy_cache\n    | \\.tox\n    | \\.venv\n    | _build\n    | buck-out\n    | build\n    | dist\n    | migrations\n  )/\n)\n"

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff.lint]
select = [ "B", "C4", "C90", "DTZ", "E", "F", "I", "ISC", "N", "NPY", "PD", "PERF", "PIE", "PL", "PTH", "RET", "RUF", "SIM", "TCH", "TID", "UP", "W",]
ignore = [ "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915", "PLR2004",]
fixable = [ "ALL",]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.pytest.ini_options]
testpaths = [ "tests",]
python_files = [ "test_*.py", "*_test.py",]
python_classes = [ "Test*",]
python_functions = [ "test_*",]
addopts = "\n    -ra\n    --strict-markers\n    --ignore=docs\n    --ignore=setup.py\n    --ignore=ci\n    --ignore=.eggs\n    --tb=short\n    --maxfail=1\n"
markers = [ "slow: marks tests as slow (deselect with '-m \"not slow\"')", "integration: marks tests as integration tests", "unit: marks tests as unit tests",]

[tool.coverage.run]
branch = true
source = [ "src",]
omit = [ "*/tests/*", "*/test_*.py", "*/__pycache__/*", "*/migrations/*", "*/venv/*", "*/.venv/*",]

[tool.coverage.report]
exclude_lines = [ "pragma: no cover", "def __repr__", "if self.debug:", "if settings.DEBUG", "raise AssertionError", "raise NotImplementedError", "if 0:", "if __name__ == .__main__.:", "if TYPE_CHECKING:",]

[dependency-groups]
dev = [
    "ruff>=0.12.11",
    "types-croniter>=6.0.0.20250809",
    "types-python-dateutil>=2.9.0.20250822",
    "types-requests>=2.32.4.20250809",
]

[tool.ruff.lint.isort]
known-first-party = [ "tracklist_service", "shared", "core_types",]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [ "S101", "PLR2004", "PLR0913",]
"migrations/*" = [ "E501",]

[tool.hatch.build.targets.wheel]
packages = [ "src",]
