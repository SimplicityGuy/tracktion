[project]
name = "analysis_service"
version = "0.1.0"
description = "Audio metadata extraction and analysis service"
requires-python = ">=3.12"
dependencies = [ "aio-pika>=9.0.0", "aiofiles>=23.0.0", "aiohttp>=3.9.0", "aioredis>=2.0.1", "essentia>=2.1b6.dev1389", "essentia-tensorflow>=2.1b6.dev1389", "flask>=3.0.0", "librosa>=0.10.2", "mutagen>=1.47.0", "neo4j>=5.28.2", "numpy>=2.3.2", "pika>=1.3.0", "prometheus-client>=0.19.0", "psutil>=5.9.0", "pydantic>=2.0.0", "python-dotenv>=1.0.0", "redis>=5.0.0", "structlog>=24.0.0",]

[build-system]
requires = [ "hatchling",]
build-backend = "hatchling.build"

[project.optional-dependencies]
dev = [ "mypy==1.17.1", "pytest>=8.0.0", "pytest-asyncio>=0.23.0", "pytest-cov>=4.0.0", "ruff>=0.1.0", "types-aiofiles>=0.1.0", "types-psutil>=7.0.0.20250822", "types-requests>=2.32.4.20250809",]

[tool.ruff]
line-length = 120
target-version = "py313"
fix = true

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
no_implicit_optional = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
follow_imports = "normal"
namespace_packages = true
explicit_package_bases = true
[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.black]
line-length = 120
target-version = [ "py313",]
include = "\\.pyi?$"
extend-exclude = "\n(\n  /(\n      \\.eggs\n    | \\.git\n    | \\.hg\n    | \\.mypy_cache\n    | \\.tox\n    | \\.venv\n    | _build\n    | buck-out\n    | build\n    | dist\n    | migrations\n  )/\n)\n"

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff.lint]
select = [ "B", "C4", "C90", "DTZ", "E", "F", "I", "ISC", "N", "NPY", "PD", "PERF", "PIE", "PL", "PTH", "RET", "RUF", "SIM", "TCH", "TID", "UP", "W",]
ignore = [ "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915", "PLR2004",]
fixable = [ "ALL",]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.pytest.ini_options]
testpaths = [ "tests",]
python_files = [ "test_*.py", "*_test.py",]
python_classes = [ "Test*",]
python_functions = [ "test_*",]
addopts = "\n    -ra\n    --strict-markers\n    --ignore=docs\n    --ignore=setup.py\n    --ignore=ci\n    --ignore=.eggs\n    --tb=short\n    --maxfail=1\n"
markers = [ "slow: marks tests as slow (deselect with '-m \"not slow\"')", "integration: marks tests as integration tests", "unit: marks tests as unit tests",]

[tool.coverage.run]
branch = true
source = [ "src",]
omit = [ "*/tests/*", "*/test_*.py", "*/__pycache__/*", "*/migrations/*", "*/venv/*", "*/.venv/*",]

[tool.coverage.report]
exclude_lines = [ "pragma: no cover", "def __repr__", "if self.debug:", "if settings.DEBUG", "raise AssertionError", "raise NotImplementedError", "if 0:", "if __name__ == .__main__.:", "if TYPE_CHECKING:",]

[dependency-groups]
dev = [
    "types-aiofiles>=24.1.0.20250822",
    "types-tensorflow>=2.18.0.20250809",
]

[tool.ruff.lint.isort]
known-first-party = [ "analysis_service", "shared", "core_types",]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [ "S101", "PLR2004", "PLR0913",]
"migrations/*" = [ "E501",]

[tool.hatch.build.targets.wheel]
packages = [ "src",]
