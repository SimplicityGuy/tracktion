services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: tracktion-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-tracktion}
      POSTGRES_USER: ${POSTGRES_USER:-tracktion_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tracktion-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-tracktion_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.26-community
    container_name: tracktion-neo4j
    environment:
      NEO4J_AUTH: ${NEO4J_AUTH:-neo4j/changeme}
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_memory_pagecache_size: 512M
      NEO4J_dbms_memory_heap_max__size: 1G
    ports:
      - "${NEO4J_BOLT_PORT:-7687}:7687"
      - "${NEO4J_HTTP_PORT:-7474}:7474"
    volumes:
      - neo4j_data:/data
    networks:
      - tracktion-network
    healthcheck:
      test: ["CMD", "neo4j", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7.4-alpine
    container_name: tracktion-redis
    command: redis-server --appendonly yes
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - tracktion-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:4.0-management-alpine
    container_name: tracktion-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-tracktion}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-changeme}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST:-/}
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    networks:
      - tracktion-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # File Watcher Service
  file_watcher:
    build:
      context: ../services/file_watcher
      dockerfile: Dockerfile
    container_name: tracktion-file-watcher
    environment:
      FILE_WATCHER_SCAN_PATH: ${FILE_WATCHER_SCAN_PATH:-/data/music}
      FILE_WATCHER_SCAN_INTERVAL: ${FILE_WATCHER_SCAN_INTERVAL:-60}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-tracktion}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-changeme}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    volumes:
      - ${FILE_WATCHER_SCAN_PATH:-./data/music}:/data/music:ro
    networks:
      - tracktion-network
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  # Cataloging Service (placeholder)
  cataloging_service:
    image: python:3.13-slim
    container_name: tracktion-cataloging
    command: ["echo", "Cataloging service placeholder"]
    networks:
      - tracktion-network
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  # Analysis Service (placeholder)
  analysis_service:
    image: python:3.13-slim
    container_name: tracktion-analysis
    command: ["echo", "Analysis service placeholder"]
    networks:
      - tracktion-network
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  # Tracklist Service (placeholder)
  tracklist_service:
    image: python:3.13-slim
    container_name: tracktion-tracklist
    command: ["echo", "Tracklist service placeholder"]
    networks:
      - tracktion-network
    depends_on:
      rabbitmq:
        condition: service_healthy

networks:
  tracktion-network:
    driver: bridge

volumes:
  postgres_data:
  neo4j_data:
  redis_data:
  rabbitmq_data:
